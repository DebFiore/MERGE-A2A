// Enhanced Prisma Schema for MERGE AI - SQLite Compatible
// Multi-Tenant AI Voice Calling SaaS Platform
// Built on your existing schema with SQLite-compatible enhancements

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// ==========================================
// ENHANCED CORE MODELS
// ==========================================

model Client {
  id          String   @id @default(cuid())
  name        String
  email       String   @unique
  company     String?
  
  // NEW: Enhanced Client Fields
  subdomain   String?  @unique  // For multi-tenant subdomains
  logo        String?
  website     String?
  industry    String?
  timezone    String   @default("UTC")
  
  // Contact Information
  contactPhone    String?
  address         String?
  city           String?
  state          String?
  country        String?
  postalCode     String?
  
  // VAPI Configuration (existing)
  vapiApiKey        String?
  vapiPhoneNumberId String?
  vapiAssistantId   String?
  vapiWebhookSecret String?
  
  // Enhanced Settings
  isActive    Boolean   @default(true)
  planType    String    @default("BASIC")  // TRIAL, BASIC, PROFESSIONAL, ENTERPRISE, CUSTOM
  settingsJson String   @default("{}")     // JSON as string for SQLite
  customBrandingJson String?              // JSON as string for SQLite
  
  // Billing & Limits
  monthlyCallLimit  Int     @default(1000)
  callsUsed        Int     @default(0)
  minutesLimit     Int     @default(10000)
  minutesUsed      Int     @default(0)
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  users       User[]
  campaigns   Campaign[]
  leads       Lead[]
  voiceAgents VoiceAgent[]
  phoneNumbers PhoneNumber[]
  billingAccount BillingAccount?
  leadHoopConfigs LeadHoopConfig[]
  
  @@map("clients")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  firstName String
  lastName  String
  
  // NEW: Enhanced User Fields
  phone     String?
  avatar    String?
  password  String?   // For authentication
  
  // Role & Status (as strings for SQLite compatibility)
  role      String    @default("CLIENT_USER")    // SUPER_ADMIN, CLIENT_ADMIN, CLIENT_USER, CLIENT_VIEWER
  status    String    @default("PENDING_VERIFICATION")  // ACTIVE, INACTIVE, SUSPENDED, PENDING_VERIFICATION
  
  // Email Verification
  emailVerified     Boolean   @default(false)
  emailVerifyToken  String?
  emailVerifyExpiry DateTime?
  
  // Password Reset
  resetToken        String?
  resetExpiry       DateTime?
  
  // Settings & Activity
  preferencesJson   String    @default("{}")  // JSON as string for SQLite
  lastLoginAt       DateTime?
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Multi-tenant relation
  clientId  String
  client    Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  
  // Relations
  campaigns Campaign[]
  leads     Lead[]
  activities Activity[]
  
  @@map("users")
}

model Campaign {
  id          String         @id @default(cuid())
  name        String
  description String?
  
  // Enhanced Campaign Fields (as strings for SQLite)
  type        String         @default("OUTBOUND_SALES")  // OUTBOUND_SALES, INBOUND_SUPPORT, APPOINTMENT_SETTING, SURVEY, FOLLOW_UP, CUSTOM
  status      String         @default("DRAFT")           // DRAFT, SCHEDULED, ACTIVE, PAUSED, COMPLETED, ARCHIVED
  
  // Scheduling
  startDate         DateTime?
  endDate           DateTime?
  dailyStartTime    String?   // Format: "09:00"
  dailyEndTime      String?   // Format: "17:00"
  timezone          String    @default("UTC")
  workingDaysJson   String    @default("[1,2,3,4,5]")  // JSON as string for SQLite
  
  // Configuration
  maxCallsPerDay    Int?
  maxAttemptsPerLead Int      @default(3)
  timeBetweenCalls  Int       @default(120) // minutes
  
  // VAPI Configuration (existing)
  vapiAssistantId   String?
  customInstructions String?  // Removed @db.Text for SQLite
  
  // Enhanced Script & Prompts
  scriptTemplate    String?   // Removed @db.Text for SQLite
  voicePrompt       String?   // Removed @db.Text for SQLite
  customFieldsJson  String?   // JSON as string for SQLite
  
  // Performance Metrics
  totalLeads        Int       @default(0)
  completedCalls    Int       @default(0)
  successfulCalls   Int       @default(0)
  averageCallDuration Float?
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  completedAt DateTime?
  
  // Multi-tenant relation
  clientId    String
  client      Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // NEW: Enhanced Relations
  voiceAgentId      String?
  voiceAgent        VoiceAgent? @relation(fields: [voiceAgentId], references: [id])
  
  phoneNumberId     String?
  phoneNumber       PhoneNumber? @relation(fields: [phoneNumberId], references: [id])
  
  // Relations
  leads       Lead[]
  calls       Call[]
  
  @@map("campaigns")
}

model Lead {
  id          String     @id @default(cuid())
  firstName   String
  lastName    String
  email       String
  phone       String?
  company     String?
  
  // Enhanced Location Fields
  state       String?
  city        String?
  zipCode     String?
  address     String?
  country     String?
  
  // Enhanced Lead Fields
  jobTitle      String?
  alternatePhone String?
  areaOfStudy   String?
  
  // Status (as string for SQLite)
  status      String     @default("NEW")  // NEW, PENDING, QUEUED, IN_PROGRESS, CONTACTED, INTERESTED, NOT_INTERESTED, CALLBACK_SCHEDULED, CONVERTED, FAILED, DO_NOT_CALL
  
  // Enhanced Tracking
  source            String?
  score             Int?
  tagsJson          String    @default("[]")    // JSON as string for SQLite
  customDataJson    String?                     // JSON as string for SQLite
  
  // Call Tracking (enhanced)
  callAttempts     Int       @default(0)
  lastCallAt       DateTime?
  nextAttemptAt    DateTime?
  callNotes        String?   // Removed @db.Text for SQLite
  
  // Compliance
  tcpaConsent         Boolean   @default(false)
  consentRecordingUrl String?
  
  // Form Submission
  formSubmitted Boolean   @default(false)
  submissionUrl String?
  submissionAt  DateTime?
  
  // Enhanced Notes
  notes           String?   // Removed @db.Text for SQLite
  internalNotes   String?   // Removed @db.Text for SQLite
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  convertedAt DateTime?
  
  // Multi-tenant relation
  clientId    String
  client      Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  campaignId  String
  campaign    Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  
  // Relations
  statusUpdates StatusUpdate[]
  callLogs      CallLog[]
  calls         Call[]
  activities    Activity[]
  automationLogs AutomationLog[]
  automationQueue AutomationQueue?
  
  @@unique([phone, campaignId])
  @@map("leads")
}

// ==========================================
// LEADHOOP INTEGRATION MODELS
// ==========================================

model LeadHoopConfig {
  id                    String   @id @default(cuid())
  
  // Client-specific configuration
  clientId              String
  client                Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  
  // LeadHoop Portal Configuration
  portalUrl             String
  portalId              String
  isActive              Boolean  @default(true)
  
  // Field Mapping Configuration (JSON as string for SQLite)
  fieldMappingJson      String   @default("{}")  // Maps our fields to LeadHoop fields
  
  // Automation Settings
  autoSubmit            Boolean  @default(true)
  retryAttempts         Int      @default(3)
  retryDelayMinutes     Int      @default(5)
  
  // Default Values (JSON as string for SQLite)
  defaultValuesJson     String   @default("{}")  // Default values for portal fields
  
  // Timestamps
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  // Relations
  automationLogs        AutomationLog[]
  
  @@unique([clientId, portalId])
  @@map("leadhoop_configs")
}

model AutomationLog {
  id                    String            @id @default(cuid())
  
  // Lead Information
  leadId                String
  lead                  Lead              @relation(fields: [leadId], references: [id], onDelete: Cascade)
  
  // LeadHoop Configuration
  leadHoopConfigId      String
  leadHoopConfig        LeadHoopConfig    @relation(fields: [leadHoopConfigId], references: [id], onDelete: Cascade)
  
  // Processing Details
  status                String            // QUEUED, IN_PROGRESS, SUCCESS, FAILED, RETRY
  attemptNumber         Int               @default(1)
  
  // URLs and Data
  constructedUrl        String?           // The pre-filled URL
  submissionDataJson    String?           // Data sent to portal (JSON as string)
  
  // Results
  success               Boolean           @default(false)
  responseDataJson      String?           // Response from portal (JSON as string)
  errorMessage          String?
  screenshotPath        String?           // Path to screenshot for debugging
  
  // Performance Metrics
  processingTimeMs      Int?              // Time taken to process
  queuedAt              DateTime          @default(now())
  startedAt             DateTime?
  completedAt           DateTime?
  
  // Portal Response
  portalResponseCode    Int?
  portalResponseMessage String?
  
  @@map("automation_logs")
}

model AutomationQueue {
  id                    String            @id @default(cuid())
  
  // Lead Information
  leadId                String            @unique
  lead                  Lead              @relation(fields: [leadId], references: [id], onDelete: Cascade)
  
  // Queue Management
  status                String            @default("QUEUED")  // QUEUED, PROCESSING, COMPLETED, FAILED
  priority              Int               @default(1)         // 1=High, 2=Medium, 3=Low
  
  // Retry Logic
  attemptCount          Int               @default(0)
  maxAttempts           Int               @default(3)
  nextAttemptAt         DateTime?
  
  // Processing Details
  processingStartedAt   DateTime?
  lastError             String?
  
  // Timestamps
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt
  
  @@map("automation_queue")
}

// ==========================================
// NEW MODELS FOR ENHANCED FUNCTIONALITY
// ==========================================

model VoiceAgent {
  id                String      @id @default(cuid())
  name              String
  description       String?
  
  // Voice Configuration
  voice             String      @default("FEMALE_US")  // MALE_US, FEMALE_US, MALE_UK, FEMALE_UK, MALE_AU, FEMALE_AU, CUSTOM
  language          String      @default("en-US")
  pitch             Float       @default(1.0)
  speed             Float       @default(1.0)
  
  // AI Configuration
  personality       String?     // Removed @db.Text for SQLite
  instructions      String?     // Removed @db.Text for SQLite
  model             String      @default("gpt-3.5-turbo")
  temperature       Float       @default(0.7)
  
  // VAPI Integration
  vapiAgentId       String?     @unique
  vapiConfigJson    String?     // JSON as string for SQLite
  
  // Status
  isActive          Boolean     @default(true)
  isDefault         Boolean     @default(false)
  
  // Timestamps
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  
  // Multi-tenant relation
  clientId          String
  client            Client      @relation(fields: [clientId], references: [id], onDelete: Cascade)
  
  // Relations
  campaigns         Campaign[]
  calls             Call[]
  
  @@map("voice_agents")
}

model PhoneNumber {
  id                String              @id @default(cuid())
  number            String              @unique
  friendlyName      String?
  
  // Configuration
  type              String              @default("LOCAL")  // LOCAL, TOLL_FREE, INTERNATIONAL
  status            String              @default("PENDING_VERIFICATION")  // ACTIVE, INACTIVE, PENDING_VERIFICATION, RELEASED
  capabilitiesJson  String              @default("{\"voice\": true, \"sms\": false}")  // JSON as string for SQLite
  
  // Provider Information
  provider          String              @default("VAPI")
  providerNumberId  String?             @unique
  monthlyFee        Float?
  perMinuteRate     Float?
  
  // Location
  country           String              @default("US")
  region            String?
  city              String?
  
  // Timestamps
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  releasedAt        DateTime?
  
  // Multi-tenant relation
  clientId          String
  client            Client              @relation(fields: [clientId], references: [id], onDelete: Cascade)
  
  // Relations
  campaigns         Campaign[]
  calls             Call[]
  
  @@map("phone_numbers")
}

model Call {
  id                String          @id @default(cuid())
  
  // Call Details
  fromNumber        String
  toNumber          String
  direction         String          @default("outbound") // outbound/inbound
  status            String
  outcome           String?         // ANSWERED, NO_ANSWER, BUSY, VOICEMAIL, FAILED, INVALID_NUMBER, DISCONNECTED
  
  // Timing
  startedAt         DateTime        @default(now())
  answeredAt        DateTime?
  endedAt           DateTime?
  duration          Int?            // seconds
  
  // Recording & Transcript
  recordingUrl      String?
  transcriptUrl     String?
  transcript        String?         // Removed @db.Text for SQLite
  summary           String?         // Removed @db.Text for SQLite
  sentiment         String?
  
  // Cost
  cost              Float?
  
  // VAPI Integration
  vapiCallId        String?         @unique
  vapiDataJson      String?         // JSON as string for SQLite
  
  // Relations
  leadId            String
  lead              Lead            @relation(fields: [leadId], references: [id], onDelete: Cascade)
  
  campaignId        String
  campaign          Campaign        @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  
  voiceAgentId      String?
  voiceAgent        VoiceAgent?     @relation(fields: [voiceAgentId], references: [id])
  
  phoneNumberId     String?
  phoneNumber       PhoneNumber?    @relation(fields: [phoneNumberId], references: [id])
  
  @@map("calls")
}

model Activity {
  id                String      @id @default(cuid())
  type              String      // call_scheduled, call_completed, lead_converted, etc.
  description       String
  metadataJson      String?     // JSON as string for SQLite
  
  // Timestamps
  createdAt         DateTime    @default(now())
  
  // Relations
  userId            String
  user              User        @relation(fields: [userId], references: [id])
  
  leadId            String?
  lead              Lead?       @relation(fields: [leadId], references: [id], onDelete: Cascade)
  
  @@map("activities")
}

model BillingAccount {
  id                String              @id @default(cuid())
  
  // Billing Details
  plan              String              @default("TRIAL")  // TRIAL, BASIC, PROFESSIONAL, ENTERPRISE, CUSTOM
  status            String              @default("active")
  
  // Subscription
  subscriptionId    String?             @unique
  subscriptionStart DateTime?
  subscriptionEnd   DateTime?
  trialEndsAt       DateTime?
  
  // Limits & Usage (duplicated in Client for performance)
  monthlyCallLimit  Int                 @default(1000)
  callsUsed         Int                 @default(0)
  minutesLimit      Int                 @default(10000)
  minutesUsed       Int                 @default(0)
  
  // Payment
  stripeCustomerId  String?             @unique
  paymentMethodId   String?
  
  // Billing Contact
  billingEmail      String?
  billingName       String?
  billingAddressJson String?            // JSON as string for SQLite
  
  // Timestamps
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  
  // Relations
  clientId          String              @unique
  client            Client              @relation(fields: [clientId], references: [id], onDelete: Cascade)
  
  transactions      BillingTransaction[]
  
  @@map("billing_accounts")
}

model BillingTransaction {
  id                String              @id @default(cuid())
  
  // Transaction Details
  type              String              // SUBSCRIPTION, USAGE, CREDIT, REFUND, ADJUSTMENT
  status            String              @default("PENDING")  // PENDING, COMPLETED, FAILED, REFUNDED
  amount            Float
  currency          String              @default("USD")
  description       String
  
  // Payment Details
  stripeInvoiceId   String?             @unique
  stripeChargeId    String?             @unique
  paymentMethod     String?
  
  // Metadata
  metadataJson      String?             // JSON as string for SQLite
  
  // Timestamps
  createdAt         DateTime            @default(now())
  processedAt       DateTime?
  
  // Relations
  billingAccountId  String
  billingAccount    BillingAccount      @relation(fields: [billingAccountId], references: [id], onDelete: Cascade)
  
  @@map("billing_transactions")
}

// ==========================================
// EXISTING MODELS (Enhanced)
// ==========================================

model StatusUpdate {
  id        String   @id @default(cuid())
  leadId    String
  lead      Lead     @relation(fields: [leadId], references: [id], onDelete: Cascade)
  
  fromStatus String
  toStatus   String
  reason     String?
  notes      String?
  createdAt  DateTime @default(now())
  
  @@map("status_updates")
}

model CallLog {
  id          String   @id @default(cuid())
  leadId      String
  lead        Lead     @relation(fields: [leadId], references: [id], onDelete: Cascade)
  
  callId      String?
  duration    Int?
  status      String
  recording   String?
  transcript  String?
  notes       String?
  cost        Float?
  
  startedAt   DateTime
  endedAt     DateTime?
  createdAt   DateTime @default(now())
  
  @@map("call_logs")
}