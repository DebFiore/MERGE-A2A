// Production Prisma Schema for MERGE AI - PostgreSQL
// Multi-Tenant AI Voice Calling SaaS Platform
// Optimized for Vercel + PostgreSQL deployment

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ==========================================
// CORE MODELS - Production Ready
// ==========================================

model Client {
  id          String   @id @default(cuid())
  name        String
  email       String   @unique
  company     String?
  
  // Enhanced Client Fields
  subdomain   String?  @unique
  logo        String?
  website     String?
  industry    String?
  timezone    String   @default("UTC")
  
  // Contact Information
  contactPhone    String?
  address         String?
  city           String?
  state          String?
  country        String?
  postalCode     String?
  
  // VAPI Configuration
  vapiApiKey        String?
  vapiPhoneNumberId String?
  vapiAssistantId   String?
  vapiWebhookSecret String?
  
  // Enhanced Settings
  isActive    Boolean   @default(true)
  planType    String    @default("BASIC")
  settings    Json      @default("{}")
  customBranding Json?
  
  // Billing & Usage
  billingEmail      String?
  paymentMethodId   String?
  subscriptionId    String?
  trialEndsAt       DateTime?
  callsThisMonth    Int       @default(0)
  monthlyCallLimit  Int       @default(1000)
  minutesUsed       Int       @default(0)
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  users       User[]
  campaigns   Campaign[]
  leads       Lead[]
  voiceAgents VoiceAgent[]
  phoneNumbers PhoneNumber[]
  billingAccount BillingAccount?
  
  @@map("clients")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  firstName String
  lastName  String
  
  // Authentication
  hashedPassword String?
  emailVerified  Boolean   @default(false)
  emailVerificationToken String?
  emailVerificationExpires DateTime?
  
  // Enhanced User Fields
  role      String    @default("CLIENT_USER")
  status    String    @default("PENDING")
  phone     String?
  avatar    String?
  title     String?
  lastLoginAt DateTime?
  
  // Preferences
  timezone     String?
  language     String    @default("en")
  preferences  Json      @default("{}")
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Multi-tenant relation
  clientId  String
  client    Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  
  // Relations
  campaigns Campaign[]
  leads     Lead[]
  activities Activity[]
  
  @@map("users")
}

model Campaign {
  id          String         @id @default(cuid())
  name        String
  description String?
  
  // Enhanced Campaign Fields
  type        String         @default("OUTBOUND_SALES")
  status      String         @default("DRAFT")
  priority    String         @default("MEDIUM")
  
  // Schedule & Timing
  startDate   DateTime?
  endDate     DateTime?
  timezone    String         @default("UTC")
  callHours   Json          @default("{\"start\": \"09:00\", \"end\": \"17:00\", \"days\": [1,2,3,4,5]}")
  
  // Call Configuration
  maxAttempts        Int      @default(3)
  attemptDelay       Int      @default(24)
  callScript         String?
  voiceInstructions  String?
  
  // Performance Tracking
  totalLeads      Int       @default(0)
  completedCalls  Int       @default(0)
  successfulCalls Int       @default(0)
  conversionRate  Float?
  avgCallDuration Float?
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  completedAt DateTime?
  
  // Multi-tenant relation
  clientId    String
  client      Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Enhanced Relations
  voiceAgentId      String?
  voiceAgent        VoiceAgent? @relation(fields: [voiceAgentId], references: [id])
  
  phoneNumberId     String?
  phoneNumber       PhoneNumber? @relation(fields: [phoneNumberId], references: [id])
  
  // Relations
  leads       Lead[]
  calls       Call[]
  
  @@map("campaigns")
}

model Lead {
  id          String     @id @default(cuid())
  firstName   String
  lastName    String
  email       String
  phone       String?
  company     String?
  
  // Enhanced Location Fields
  state       String?
  city        String?
  zipCode     String?
  address     String?
  country     String?
  
  // Enhanced Lead Fields
  jobTitle      String?
  alternatePhone String?
  areaOfStudy   String?
  
  // Status
  status      String     @default("NEW")
  
  // Enhanced Tracking
  source            String?
  score             Int?
  tags              String[]  @default([])
  customData        Json?
  
  // Call Tracking
  callAttempts     Int       @default(0)
  lastCallAt       DateTime?
  nextAttemptAt    DateTime?
  callNotes        String?
  
  // Compliance
  tcpaConsent         Boolean   @default(false)
  consentRecordingUrl String?
  
  // Form Submission
  formSubmitted Boolean   @default(false)
  optedOut      Boolean   @default(false)
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  convertedAt DateTime?
  
  // Multi-tenant relation
  clientId    String
  client      Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  campaignId  String
  campaign    Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  
  // Relations
  statusUpdates StatusUpdate[]
  callLogs      CallLog[]
  calls         Call[]
  activities    Activity[]
  
  @@unique([phone, campaignId])
  @@map("leads")
}

// Additional models would follow the same pattern...
// (VoiceAgent, PhoneNumber, Call, Activity, BillingAccount, etc.)

model VoiceAgent {
  id                String      @id @default(cuid())
  name              String
  voice             String      @default("FEMALE_US")
  personality       String      @default("professional")
  greeting          String?
  instructions      String?
  
  // Configuration
  isActive          Boolean     @default(true)
  isDefault         Boolean     @default(false)
  settings          Json        @default("{}")
  
  // VAPI Integration
  vapiAssistantId   String?     @unique
  vapiConfiguration Json?
  
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  
  // Multi-tenant relation
  clientId          String
  client            Client      @relation(fields: [clientId], references: [id], onDelete: Cascade)
  
  // Relations
  campaigns         Campaign[]
  calls             Call[]
  
  @@map("voice_agents")
}

model PhoneNumber {
  id                String              @id @default(cuid())
  number            String              @unique
  friendlyName      String?
  
  // Configuration
  type              String              @default("LOCAL")
  status            String              @default("PENDING_VERIFICATION")
  capabilities      Json                @default("{\"voice\": true, \"sms\": false}")
  
  // Billing
  monthlyCost       Float               @default(15.00)
  setupCost         Float               @default(0.00)
  
  // Provider Integration
  providerId        String?
  providerData      Json?
  
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  releasedAt        DateTime?
  
  // Multi-tenant relation
  clientId          String
  client            Client              @relation(fields: [clientId], references: [id], onDelete: Cascade)
  
  // Relations
  campaigns         Campaign[]
  calls             Call[]
  
  @@map("phone_numbers")
}

model Call {
  id                String          @id @default(cuid())
  
  // Call Details
  fromNumber        String
  toNumber          String
  direction         String          @default("outbound")
  status            String
  outcome           String?
  duration          Int?
  cost              Float?
  
  // Timestamps
  startedAt         DateTime        @default(now())
  answeredAt        DateTime?
  endedAt           DateTime?
  
  // Recording & Transcription
  recordingUrl      String?
  transcription     String?
  summary           String?
  sentiment         String?
  
  // VAPI Integration
  vapiCallId        String?         @unique
  vapiData          Json?
  
  // Relations
  leadId            String
  lead              Lead            @relation(fields: [leadId], references: [id], onDelete: Cascade)
  
  campaignId        String
  campaign          Campaign        @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  
  voiceAgentId      String?
  voiceAgent        VoiceAgent?     @relation(fields: [voiceAgentId], references: [id])
  
  phoneNumberId     String?
  phoneNumber       PhoneNumber?    @relation(fields: [phoneNumberId], references: [id])
  
  @@map("calls")
}

model Activity {
  id                String      @id @default(cuid())
  
  // Activity Details
  type              String
  description       String
  metadata          Json?
  
  // Timestamps
  createdAt         DateTime    @default(now())
  
  // Relations
  userId            String
  user              User        @relation(fields: [userId], references: [id])
  
  leadId            String?
  lead              Lead?       @relation(fields: [leadId], references: [id], onDelete: Cascade)
  
  @@map("activities")
}

model BillingAccount {
  id                String              @id @default(cuid())
  
  // Billing Details
  plan              String              @default("TRIAL")
  status            String              @default("active")
  
  // Usage Tracking
  callsUsed         Int                 @default(0)
  monthlyCallLimit  Int                 @default(1000)
  minutesUsed       Int                 @default(0)
  monthlyMinuteLimit Int                @default(5000)
  
  // Billing Cycle
  billingCycleStart DateTime            @default(now())
  billingCycleEnd   DateTime?
  nextBillingDate   DateTime?
  
  // Payment
  stripeCustomerId      String?         @unique
  stripeSubscriptionId  String?         @unique
  paymentMethodId       String?
  
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  
  // Relations
  clientId          String              @unique
  client            Client              @relation(fields: [clientId], references: [id], onDelete: Cascade)
  
  transactions      BillingTransaction[]
  
  @@map("billing_accounts")
}

model BillingTransaction {
  id                String              @id @default(cuid())
  
  // Transaction Details
  type              String
  status            String              @default("PENDING")
  amount            Float
  currency          String              @default("USD")
  description       String
  
  // Provider Integration
  stripePaymentIntentId String?         @unique
  stripeInvoiceId       String?
  
  createdAt         DateTime            @default(now())
  processedAt       DateTime?
  
  // Relations
  billingAccountId  String
  billingAccount    BillingAccount      @relation(fields: [billingAccountId], references: [id], onDelete: Cascade)
  
  @@map("billing_transactions")
}

// Legacy models for compatibility
model StatusUpdate {
  id        String   @id @default(cuid())
  leadId    String
  lead      Lead     @relation(fields: [leadId], references: [id], onDelete: Cascade)
  status    String
  createdAt DateTime @default(now())
  
  @@map("status_updates")
}

model CallLog {
  id         String   @id @default(cuid())
  leadId     String
  lead       Lead     @relation(fields: [leadId], references: [id], onDelete: Cascade)
  status     String
  notes      String?
  duration   Int?
  recordingUrl String?
  createdAt  DateTime @default(now())
  
  @@map("call_logs")
}